[{"url":"https://en.wikipedia.org/wiki?curid=17808671","text":"Schema (genetic algorithms)\n\nA schema is a template in computer science used in the field of genetic algorithms that identifies a subset of strings with similarities at certain string positions. Schemata are a special case of cylinder sets; and so form a topological space.\n\nFor example, consider binary strings of length 6. The schema 1**0*1 describes the set of all words of length 6 with 1's at the first and sixth positions and a 0 at the fourth position. The * is a wildcard symbol, which means that positions 2, 3 and 5 can have a value of either 1 or 0. The \"order of a schema\" is defined as the number of fixed positions in the template, while the \"defining length\" formula_1 is the distance between the first and last specific positions. The order of 1**0*1 is 3 and its defining length is 5. The \"fitness of a schema\" is the average fitness of all strings matching the schema. The fitness of a string is a measure of the value of the encoded problem solution, as computed by a problem-specific evaluation function.\n\nThe length of a schema formula_2, called formula_3, is defined as the total number of nodes in the schema. formula_3 is also equal to the number of nodes in the programs matching formula_2.\n\nIf the child of an individual that matches schema H does not \"itself\" match H, the schema is said to have been \"disrupted\".\n\nIn evolutionary computing such as genetic algorithms and genetic programming, propagation refers to the inheritance of characteristics of one generation by the next. For example, a schema is propagated if individuals in the current generation match it and so do those in the next generation. Those in the next generation may be (but don't have to be) children of parents who matched it.\n\nRecently schema have been studied using order theory.\n\nTwo basic operators are defined for schema: expansion and compression. The expansion maps a schema onto a set of words which it represents, while the compression maps a set of words on to a schema.\n\nIn the following definitions formula_6 denotes an alphabet, formula_7 denotes all words of length formula_8 over the alphabet formula_6, formula_10 denotes the alphabet formula_11 with the extra symbol formula_12. formula_13 denotes all schema of length formula_8 over the alphabet formula_10 as well as the empty schema formula_16.\nFor any schema formula_17 the following operator formula_18, called the formula_19 of formula_20, which maps formula_20 to a subset of words in formula_22:\n\nformula_23\n\nWhere subscript formula_24 denotes the character at position formula_24 in a word or schema. When formula_26 then formula_27. More simply put, formula_18 is the set of all words in formula_29 that can be made by exchanging the formula_12 symbols in formula_20 with symbols from formula_11. For example, if formula_33, formula_34 and formula_35 then formula_36.\n\nConversely, for any formula_37 we define formula_38, called the formula_39 of formula_40, which maps formula_40 on to a schema formula_42:\nformula_43\nwhere formula_20 is a schema of length formula_45 such that the symbol at position formula_24 in formula_20 is determined in the following way: if formula_48 for all formula_49 then formula_50 otherwise formula_51. If formula_52 then formula_53. One can think of this operator as stacking up all the items in formula_40 and if all elements in a column are equivalent, the symbol at that position in formula_20 takes this value, otherwise there is a wild card symbol. For example, let formula_56 then formula_57.\n\nSchemata can be partially ordered. For any formula_58 we say formula_59 if and only if formula_60. It follows that formula_61 is a partial ordering on a set of schemata from the reflexivity, antisymmetry and transitivity of the subset relation. For example, formula_62.\nThis is because formula_63.\n\nThe compression and expansion operators form a Galois connection, where formula_64 is the lower adjoint and formula_65 the upper adjoint.\n\nFor a set formula_37, we call the process of calculating the compression on each subset of A, that is <math>\\\n","id":"17808671","title":"Schema (genetic algorithms)"}]
